.TH "/home/runner/work/PEPITAS-Cryptocurrency/PEPITAS-Cryptocurrency/headers/validation/validators.h" 3 "Tue Jun 15 2021" "PEPITAS CRYPTOCURRENCY" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/runner/work/PEPITAS-Cryptocurrency/PEPITAS-Cryptocurrency/headers/validation/validators.h
.SH SYNOPSIS
.br
.PP
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <openssl/rsa\&.h>\fP
.br
\fC#include <openssl/pem\&.h>\fP
.br
\fC#include 'cryptosystem/hash\&.h'\fP
.br
\fC#include 'cryptosystem/rsa\&.h'\fP
.br
\fC#include 'misc/files\&.h'\fP
.br
\fC#include 'misc/safe\&.h'\fP
.br
\fC#include 'misc/math\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBvalidators_state_header\fP"
.br
.ti -1c
.RI "struct \fBvalidators_state_item\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBMAX_VALIDATORS_PER_BLOCK\fP   512"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBinit_validators_state\fP ()"
.br
.RI "Init the \fCvalidators\&.state\fP file if it doesn't exists\&. "
.ti -1c
.RI "RSA ** \fBget_comittee\fP (size_t \fBblock_height\fP, int *nb_validators)"
.br
.RI "Get the a comittee RSA public keys on a specific epoch\&. "
.ti -1c
.RI "RSA ** \fBget_next_comittee\fP (int *nb_validators)"
.br
.RI "Get the a comittee RSA public keys on a specific epoch\&. "
.ti -1c
.RI "ssize_t \fBget_validators_states_total_stake\fP ()"
.br
.RI "Get the total stake of the network (parse 'validators\&.state') "
.ti -1c
.RI "ssize_t \fBget_validators_states_nb_validators\fP ()"
.br
.RI "Get the number of validators of the network (parse 'validators\&.state') "
.ti -1c
.RI "ssize_t \fBget_validators_states_block_height_validity\fP ()"
.br
.RI "Get the validators states block height validity (parse 'validators\&.state') "
.ti -1c
.RI "ssize_t \fBget_validator_stake\fP (size_t validator_id)"
.br
.RI "Get a validator total stake (parse 'validators\&.state') "
.ti -1c
.RI "ssize_t \fBget_validator_power\fP (size_t validator_id)"
.br
.RI "Get a validator power (parse 'validators\&.state') "
.ti -1c
.RI "RSA * \fBget_validator_pkey\fP (size_t validator_id)"
.br
.RI "Get the validator pkey as RSA* (parse 'validators\&.state') "
.ti -1c
.RI "ssize_t \fBget_validator_id\fP (RSA *pkey)"
.br
.RI "Get the validator id in 'validators\&.state'\&. "
.ti -1c
.RI "int \fBi_am_commitee_member\fP ()"
.br
.RI "Check if the current user is a member of the next comitee\&. "
.ti -1c
.RI "char \fBupdate_validators_state\fP (\fBBlock\fP *block)"
.br
.RI "Given a block, update the 'validators\&.state' with the transactions\&. "
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define MAX_VALIDATORS_PER_BLOCK   512"

.PP
Definition at line 28 of file validators\&.h\&.
.SH "Function Documentation"
.PP 
.SS "RSA** get_comittee (size_t block_height, int * nb_validators)"

.PP
Get the a comittee RSA public keys on a specific epoch\&. 
.PP
\fBParameters\fP
.RS 4
\fIblock_height\fP The height of the block you want a comitte from 
.br
\fInb_validators\fP return value, the number of selected validators 
.RE
.PP
\fBSee also\fP
.RS 4
The 'next block' is referring to block after the last block available OFFLINE 
.RE
.PP
\fBReturns\fP
.RS 4
[*RSA] 
.RE
.PP

.PP
Definition at line 46 of file validators\&.c\&.
.SS "RSA** get_next_comittee (int * nb_validators)"

.PP
Get the a comittee RSA public keys on a specific epoch\&. 
.PP
\fBParameters\fP
.RS 4
\fInb_validators\fP return value, the number of selected validators 
.RE
.PP
\fBSee also\fP
.RS 4
The 'next block' is referring to block after the last block available OFFLINE 
.RE
.PP
\fBReturns\fP
.RS 4
[*RSA] 
.RE
.PP

.PP
Definition at line 135 of file validators\&.c\&.
.SS "ssize_t get_validator_id (RSA * pkey)"

.PP
Get the validator id in 'validators\&.state'\&. 
.PP
\fBParameters\fP
.RS 4
\fIpkey\fP The RSA public key 
.RE
.PP
\fBReturns\fP
.RS 4
ssize_t, the validator index 
.RE
.PP

.PP
Definition at line 247 of file validators\&.c\&.
.SS "RSA* get_validator_pkey (size_t validator_id)"

.PP
Get the validator pkey as RSA* (parse 'validators\&.state') 
.PP
\fBParameters\fP
.RS 4
\fIvalidator_id\fP The id of the validator in 'validators\&.state' 
.RE
.PP
\fBReturns\fP
.RS 4
RSA* 
.RE
.PP

.PP
Definition at line 216 of file validators\&.c\&.
.SS "ssize_t get_validator_power (size_t validator_id)"

.PP
Get a validator power (parse 'validators\&.state') 
.PP
\fBParameters\fP
.RS 4
\fIvalidator_id\fP The id of the validator in 'validators\&.state' 
.RE
.PP
\fBReturns\fP
.RS 4
ssize_t 
.RE
.PP

.PP
Definition at line 199 of file validators\&.c\&.
.SS "ssize_t get_validator_stake (size_t validator_id)"

.PP
Get a validator total stake (parse 'validators\&.state') 
.PP
\fBParameters\fP
.RS 4
\fIvalidator_id\fP The id of the validator in 'validators\&.state' 
.RE
.PP
\fBReturns\fP
.RS 4
ssize_t 
.RE
.PP

.PP
Definition at line 182 of file validators\&.c\&.
.SS "ssize_t get_validators_states_block_height_validity ()"

.PP
Get the validators states block height validity (parse 'validators\&.state') 
.PP
\fBReturns\fP
.RS 4
ssize_t 
.RE
.PP

.PP
Definition at line 168 of file validators\&.c\&.
.SS "ssize_t get_validators_states_nb_validators ()"

.PP
Get the number of validators of the network (parse 'validators\&.state') 
.PP
\fBReturns\fP
.RS 4
ssize_t 
.RE
.PP

.PP
Definition at line 154 of file validators\&.c\&.
.SS "ssize_t get_validators_states_total_stake ()"

.PP
Get the total stake of the network (parse 'validators\&.state') 
.PP
\fBReturns\fP
.RS 4
ssize_t 
.RE
.PP

.PP
Definition at line 140 of file validators\&.c\&.
.SS "int i_am_commitee_member ()"

.PP
Check if the current user is a member of the next comitee\&. 
.PP
\fBReturns\fP
.RS 4
The id in the comittee, -1 if you are not member of the comittee 
.RE
.PP

.PP
Definition at line 281 of file validators\&.c\&.
.SS "void init_validators_state ()"

.PP
Init the \fCvalidators\&.state\fP file if it doesn't exists\&. 
.PP
Definition at line 33 of file validators\&.c\&.
.SS "char update_validators_state (\fBBlock\fP * block)"

.PP
Given a block, update the 'validators\&.state' with the transactions\&. 
.PP
\fBParameters\fP
.RS 4
\fIblock\fP 
.RE
.PP
\fBReturns\fP
.RS 4
0, -1 if the given block height is not 'validators\&.state' height + 1 
.RE
.PP

.PP
Definition at line 333 of file validators\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for PEPITAS CRYPTOCURRENCY from the source code\&.
